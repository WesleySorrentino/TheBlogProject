@using TheBlogProject.Models
@using TheBlogProject.Services
@using TheBlogProject.Enums
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common


@inject IImageService imageService

@model IPagedList<Post>

@{
    var searchText = ViewData["SearchTerm"];
    ViewData["MainText"] = $"Searched for: {searchText}";
    ViewData["Title"] = $"Searched for: {searchText}";
}

<div class="row">
    @foreach (var post in Model)
    {
        <div class="col-sm-2 col-lg-4 mt-5">
            <div class="card border-dark" style="width:25rem;">
                <img class="card-img-top" id="img" src="@imageService.DecodeImage(post.ImageData,  post.ContentType)" />
                <div class="card-body text-center">
                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title p-1">@post.Title</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text">@post.Abstract</p>
                    </div>

                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Posts" asp-route-slug="@post.Slug">Read More</a>
                    </div>

                </div>
                
            </div>

        </div>
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("SearchIndex", new { page = page, searchTerm = ViewData["SearchTerm"] }),
            new PagedListRenderOptions
            {
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" }
            })
    </div>
</div>